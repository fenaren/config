;; Copied from David Cooke's .emacs file.  This is about half the file.
;; Something in the part of the file that was above this wasn't working in emacs
;; 26.1

;; Load LaSRS++ specific definitions.
;;

;; Added by Package.el.  This must come before configurations of
;; installed packages.  Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.
(package-initialize)

(load "LaSRS++" 1)


;; For C and C++ automatically break lines before any
;; word exceeding the fill-column
(add-hook 'c-mode-common-hook 'turn-on-auto-fill)

;; Set some personal preferences when in C and C++ mode.
(add-hook 'c-mode-common-hook
  '(lambda ()

     ;; Cause auto-indenting and formatting according to current style.
     ;; If you want a non-default you must switch to it like this:
     ;;     switch to lasrs++ style:  M-x c-set-style RET lasrs++ RET
     ;;     switch to gnu style:      M-x c-set-style RET gnu RET
     ;;   Type a '?' when asked for the style and you will get a list of
     ;;   available styles.
     ;; Set default style.
     (c-set-style "lasrs++")

     ;; Turn off auto-newlines when typing semicolons, braces, etc...
     (c-toggle-auto-state -1)

     ;; When <RET> is pressed, indent the newly created line.
     (local-set-key "\r"         'reindent-then-newline-and-indent)

     ;; If the file doesn't end with a newline, add one.
     ;(setq require-final-newline t)

     ;; If the file doesn't end with a newline,
     ;; ask if one is wanted.
     (setq require-final-newline 'ask)

     (setq
       indent-tabs-mode          nil   ;; don't use TAB chars when indenting.
       fill-column               80    ;; column at which to break lines.
       comment-column            44    ;; haven't figured this one out yet.
      )) t)

;; Prepend additional useful filename/major-mode combinations to the list.
(setq auto-mode-alist
      (append
              '(
                ("\\.[nt]\\(r\\|roff\\)?[0-9]*$" . nroff-mode)
                ("\\.\\(tbl\\|eqn\\)[0-9]*$" . nroff-mode)
                ("\\.\\(man\\)?[1-8nl]$" . nroff-mode)
                ("\\.m[sem][0-9]*$" . nroff-mode)
                ("\.h$"       . c++-mode)
                ("\.C$"       . c++-mode)
                ("\.FOR$"     . fortran-mode)
                ("\.com$"     . fortran-mode)
                ("\\.ud$"     . fortran-mode)
                ("\\.tex$"    . TeX-mode)
                ("\\.latex$"  . LaTeX-mode)
                ("\.prl$"     . perl-mode)    ;; non-standard perl file extention
                ("\.ATN$"     . c-mode)
                ("\.atn$"     . c-mode)
                ("\.m$"     . text-mode)
                )
              auto-mode-alist))

;; Emacs/Clearcase Integration.
;;   Found it here...
;;   http://members.bellatlantic.net/~vze24fr2/EmacsClearCase/
;;   http://members.bellatlantic.net/~vze24fr2/EmacsClearCase/clearcase.el
;
(load "clearcase" 1)

(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(auto-compression-mode t nil (jka-compr))
 '(case-fold-search t)
 '(current-language-environment "UTF-8")
 '(default-input-method "rfc1345")
 '(global-font-lock-mode t nil (font-lock))
 '(inhibit-startup-screen t)
 '(package-selected-packages (quote (cmake-mode groovy-mode)))
 '(text-mode-hook (quote (turn-on-auto-fill text-mode-hook-identify)))
 '(transient-mark-mode t))

;; Content below this point is not from David Cooke's .emacs file

;; Inhibit the startup screen
(setq inhibit-startup-screen t)

;; Set background and foreground (text) colors
(set-background-color "black")
(set-foreground-color "white")
(set-cursor-color     "white")

;; Set fill parameters for text
(add-hook 'text-mode-hook 'common-text-settings)

;; highlight characters that go past whitespace-line-column
(require 'whitespace)
(setq whitespace-style '(face empty tabs lines-tail trailing))
(global-whitespace-mode t)

;; insert spaces in place of tabs
(setq-default indent-tabs-mode nil)

;; autowrap lines in all text buffers
(add-hook 'text-mode-hook 'turn-on-auto-fill)

;; Adds the melpa-stable package repository as a package source
(require 'package)
(add-to-list 'package-archives
             '("melpa-stable" . "https://stable.melpa.org/packages/") t)
(package-initialize)
